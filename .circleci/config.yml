version: 2.1

# Setting up dependencies for use by the jobs in this project
orbs:
  docker: circleci/docker@1.5.0

executors:
  docker-executor:
    docker:
      - image: cimg/base:2020.01
    environment:
      IMAGE_NAME: jumal/superawesome-web-app

commands:
  load-cached-image:
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Load archived Docker image
          command: docker load -i image.tar

# Define the jobs we want to run for this project
jobs:
  lint_dockerfile:
    executor: docker/machine
    steps:
      - checkout
      - docker/dockerlint:
          dockerfile: ./Dockerfile
          treat-warnings-as-errors: true
  build:
    executor: docker-executor
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build Docker image
          command: docker build -t $IMAGE_NAME:$CIRCLE_BRANCH .
      - run:
          name: Archive Docker image
          command: docker save -o image.tar $IMAGE_NAME:$CIRCLE_BRANCH
      - persist_to_workspace:
          root: .
          paths:
            - ./image.tar
  test:
    executor: docker-executor
    steps:
      - setup_remote_docker
      - load-cached-image
      - run:
          name: Run Tests
          command: |
            # replace with propert tests in future
            docker run -d --rm --name test-container -p 3000:3000 $IMAGE_NAME:$CIRCLE_BRANCH
            STATUS_CODE=$(docker exec test-container curl -s -o /dev/null -w '%{http_code}' localhost:3000)
            [ $STATUS_CODE = 200 ] || exit 100
  register_image:
    executor: docker-executor
    steps:
      - setup_remote_docker
      - load-cached-image
      - run:
          name: Publish Docker Image to Docker Hub
          command: |
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            docker push $IMAGE_NAME:$CIRCLE_BRANCH
            if [ "$CIRCLE_BRANCH" = "master" ]; then
              docker tag $IMAGE_NAME:$CIRCLE_BRANCH $IMAGE_NAME:latest
              docker push $IMAGE_NAME:latest
            fi
  deploy:
    executor: docker-executor
    steps:
      - run:
          name: Deploy Application
          command: |
            # replace with propert tests
            echo "TO DO"
    
# Orchestrate our job run sequence
workflows:
  version: 2
  build-and-deploy:
    jobs:
      - lint_dockerfile
      - build:
          requires:
            - lint_dockerfile
      - test:
          requires:
            - build
      - register_image:
          requires:
            - test
      - deploy:
          requires:
            - register_image
